{"version":3,"sources":["services/notes.js","components/Notification.js","components/Note.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","noteService","getAll","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put","Notification","message","className","Note","note","toggleImportance","label","onClick","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6LAEMA,EAAU,aAyBDC,EAFK,CAACC,OArBN,WACb,IAAMC,EAAUC,IAAMC,IAAIL,GACpBM,EAAc,CAClBC,GAAI,IACJC,QAAS,mCACTC,KAAM,2BACNC,WAAW,GAEb,OAAOP,EAAQQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOR,OAa1BS,OAVd,SAAAC,GAEb,OADgBZ,IAAMa,KAAKjB,EAASgB,GACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQNK,OALtB,SAACX,EAAIS,GAElB,OADgBZ,IAAMe,IAAN,UAAanB,EAAb,YAAwBO,GAAMS,GAC/BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,OCR5BO,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,KCIQE,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKd,UAAY,qBAAuB,iBAEtD,OACE,qBAAIY,UAAU,OAAd,UACGE,EAAKhB,QACN,wBAAQmB,QAASF,EAAjB,SAAoCC,QCQ3BE,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GCsESC,EA3EH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,iBAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,0BAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAWrBC,qBALa,WACX3C,EACGC,SACAS,MAAK,SAAAkC,GAAY,OAAIR,EAASQ,QAEnB,IAEhB,IAmCMC,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAAAvB,GAAI,OAAIA,EAAKd,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcW,QAASqB,IACvB,8BACE,yBAAQf,QAAS,kBAAMc,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAACxB,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAlD/B,SAAAlB,GACzB,IAAMiB,EAAOY,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,KAChC4C,EAAW,2BAAQ3B,GAAR,IAAcd,WAAYc,EAAKd,YAEhDT,EACGiB,OAAOX,EAAI4C,GACXxC,MAAK,SAAAyC,GAAY,OAChBf,EAASD,EAAMY,KAAI,SAAAxB,GAAI,OAAIA,EAAKjB,KAAOA,EAAKiB,EAAO4B,SACpDC,OAAM,SAAAC,GACLX,EAAgB,SAAD,OAAUnB,EAAKhB,QAAf,sCACf+C,YAAW,kBAAMZ,EAAgB,QAAO,KACxCN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAE3C,KAAOA,SAuCsBiD,CAAmBhC,EAAKjB,MAArEiB,EAAKjB,SAGpB,uBAAMkD,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAAS8B,EACT7B,MAAM,IAAIoD,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG7B/D,EACGc,OAAO6C,GACPjD,MAAK,SAAAyC,GACJf,EAASD,EAAMtB,OAAOsC,IACtBb,EAAW,QA0Bb,UACE,uBAAO0B,MAAO3B,EAAS4B,SAvBJ,SAACR,GACxBnB,EAAWmB,EAAMS,OAAOF,UAuBpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCvENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.408d3e67.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: 'This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = {getAll, create, update};\r\n\r\nexport default noteService;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification';\r\nimport Note from './components/Note';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('a new note...');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n  \r\n  const hook = () => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => setNotes(initialNotes))\r\n  }\r\n  useEffect(hook, []);\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id);\r\n    const changedNote = { ...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => \r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote)))\r\n      .catch(error => {\r\n        setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n        setTimeout(() => setErrorMessage(null), 5000);\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  };\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n    \r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote));\r\n        setNewNote('');\r\n      })\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n  \r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n    \r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}